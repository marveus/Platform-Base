<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>globalvar pause;
pause = 0;
pausable = 0;
vspd = 0;
hspd = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Pause Game
if ( !pause )
{
    if ( keyboard_check_pressed(vk_enter)) //Pauses the game when the player press Enter.
    {
        pause = 1; //The game is paused.
        //instance_create(view_xview + view_wview / 2, view_yview + view_hview / 2, obj_pause); //Creates an object to display a pause sprite when the game is paused (optional).
        with ( obj_pausable ) //Saves the state of all "pausable" instances and put all their local variable to 0.
        {
            isCurrentlyPaused = 0;
            
            while ( pause )
            {
                //assign current variables to temps
                prev_image_speed =  image_speed;
                prev_speed = speed;
                prev_vspeed = vspd;
                prev_hspeed = hspd; 
                
                image_speed = 0;
                speed = 0;
                vspd = 0;
                hspd = 0;
                isCurrentlyPaused += 1;
                if ( keyboard_check_pressed(vk_enter) &amp;&amp; isCurrentlyPaused &gt;= 2) {
                    break;
                }   
            }
        }
    }
}
else if ( keyboard_check_pressed(vk_enter) ) //Resume the game when the player press Enter.
{
    pause = 0; //The game resumes.
    //with (obj_pause) instance_destroy(); //Destroys the pause object.
    with ( obj_pausable ) //Restore the state of all instances.
    {
        if ( pausable )
        {
            image_speed = prev_image_speed;
            speed = prev_speed;
            vspd = prev_vspeed;
            hspd = prev_hspeed;
        }
    }
}
if ( pause )
{
    with ( obj_pausable ) //Maintains all the alarms of "pausable" objects to the same value while the game is paused.
    {
        if ( pausable )
        {
            if (alarm[0]&gt;0) alarm[0]+=1;
            if (alarm[1]&gt;0) alarm[1]+=1;
            if (alarm[2]&gt;0) alarm[2]+=1;
            if (alarm[3]&gt;0) alarm[3]+=1;
            if (alarm[4]&gt;0) alarm[4]+=1;
            if (alarm[5]&gt;0) alarm[5]+=1;
            if (alarm[6]&gt;0) alarm[6]+=1;
            if (alarm[7]&gt;0) alarm[7]+=1;
            if (alarm[8]&gt;0) alarm[8]+=1;
            if (alarm[9]&gt;0) alarm[9]+=1;
            if (alarm[10]&gt;0) alarm[10]+=1;
            if (alarm[11]&gt;0) alarm[11]+=1;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
