<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_enemy</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Variables

dir = -1;
grav = 0.2;
hsp = 3;
vsp = 0;
start_x = x;
start_y = y;
patrol_x_length = 90;
damage = 25;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*hsp = dir * movespeed;
vsp += grav;*/

//Horizontal Collision
/*if (place_meeting(x+hsp,y,obj_wall))
{
    while(!place_meeting(x+sign(hsp),y,obj_wall))
    {
        x += sign(hsp);
    }
    hsp = 0;
    
    dir *= -1;
}
x += hsp;*/

//Vertical Collision
/*if (place_meeting(x,y+vsp,obj_wall))
{
    while(!place_meeting(x,y+sign(vsp),obj_wall))
    {
        y += sign(vsp);
    }
    vsp = 0;
}
y += vsp;*/

//patrolling code
if((x &lt; start_x + patrol_x_length) &amp;&amp; (dir == 1)){
    
    x += hsp;
}
else if (x &gt; start_x) {
    dir = -1;
    x -= hsp;
}
else{
    dir = 1;
}

//Enemy Collision
if (place_meeting(x,y,obj_player))
{
    //player landed on top of enemy
    if (obj_player.y+(32 - obj_player.vspd) &lt; y)
    {
        with (obj_player) vspd = -jspd;
        instance_destroy();
    }
    else
    {
        if(obj_player.invincibility == false)
        {
            obj_player.health -= damage;
            obj_player.invincibility = true;
            obj_player.alarm[0] = obj_player.invcTime;
            obj_player.sprite_index = spr_player_hurt;
            obj_player.image_index = 0;
            obj_player.image_speed = 1;
        }
        
         with (obj_player) {
            y -= 1; //set player off ground a little so obj_player.onGround = false
            vspd = -jspd / 2; //divide by 2 for shorter height of knockback
            hspd = -spd;
         }
    }
}

if(place_meeting(x, y, obj_bullet)) {
    inst = instance_place(x, y, obj_bullet);
    with(inst) {
        instance_destroy(); //destroy bullet
    }
    instance_destroy(); //destroy enemy
}

if(place_meeting(x, y, obj_sword_1)) {
    inst = instance_place(x + 32, y, obj_sword_1);
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
